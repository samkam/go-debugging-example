package main

import (
	"fmt"
	"os"

	"github.com/getbread/debug-examples/some_package"
	"github.com/gin-gonic/gin"
)

func main() {
	r := gin.Default()
	fmt.Print(r)
	fmt.Printf("r: %v+", r)

	fmt.Printf("r2: %v", r.Handlers)
	fmt.Printf("handlers: %v ", r.Handlers[0])
	r.GET("/ping", func(c *gin.Context) {
		c.JSON(200, gin.H{
			"message": some_package.GetMessage(),
		})
	})
	fmt.Printf("handlers: %+v+\n", r.Handlers.Last())
	r.Run() // listen and serve on 0.0.0.0:8080 (for windows "localhost:8080")
}

//init runs automatically before main (built in feature of golang)
func init() {
	fmt.Print("here")
	envVar := os.Getenv("ENVIRONMENTAL_VARIABLE")
	fmt.Print("here2")
	if envVar == "" {
		fmt.Printf("envVar not set! ")
		os.Exit(1)
	}
	argVar := os.Args[1]
	//fmt.Print(argVar)
	//fmt.Print(os.Environ())
	//fmt.Print(os.Args)
	//fmt.Print(os.Args[0])
	//fmt.Print(os.Args[2])

	if argVar != "somevalue" {
		fmt.Printf("argument not set!")
		os.Exit(2)
	}
	fmt.Printf("initialization passed!")
}
